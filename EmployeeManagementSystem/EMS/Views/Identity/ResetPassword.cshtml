@using EMS.Views.Identity;
@model IdentityVM;

@{
	ViewData["Title"] = "Reset Password";
	var result = TempData["Code"];
	string code = (string)result;
}

<script async src="~/js/Validation/ResetPasswordValidation.js"></script>

<main id="resetPasswordMain">
	<div class="title-wrap">
		<h1>Reset Password</h1>
	</div>
	<form method="post" asp-controller="Identity" asp-action="ResetPassword" id="resetPasswordForm">
		<section>
			<input asp-for="Code" type="hidden" value="@code"/>
			<input asp-for="Email" type="text" id="emailInput" placeholder="email" />
			<span id="errEmail" class="err errEmail hide">invalid email</span>
			<input asp-for="Password" type="text" id="passwordInput" placeholder="new password">
			<input type="text" id="confirmPasswordInput" placeholder="repeat password">
			<span id="errConfirmPassword" class="err errConfirmPassword hide">passwords must match</span>

			<div class="requirement-wrap">
				<div class="requirements">
					<div id="charMinConfirmation" class="invalid"><div></div><div></div></div>
					<label>at least 8 characters</label>
				</div>
				<div class="requirements">
					<div id="charLowerConfirmation" class="invalid"><div></div><div></div></div>
					<label>at least 1 lowercase letter</label>
				</div>
				<div class="requirements">
					<div id="charUpperConfirmation" class="invalid"><div></div><div></div></div>
					<label>at least 1 uppercase letter</label>
				</div>
				<div class="requirements">
					<div id="charNumberConfirmation" class="invalid"><div></div><div></div></div>
					<label>at least 1 number</label>
				</div>
			</div>
		</section>

		<div class="reset-login-btn-wrap">
			<button type="submit" class="btn">Reset and login</button>
		</div>
	</form>
</main>
